{"version":3,"sources":["components/layout/Header.js","components/TodoItem.js","components/Todos.js","components/AddTodo.js","components/pages/About.js","App.js","serviceWorker.js","index.js"],"names":["Header","react_default","a","createElement","style","headerStyle","Link","linkStyle","to","background","color","textAlign","padding","textDecoration","TodoItem","_Component","_getPrototypeOf2","_this","Object","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","getStyle","borderBottom","props","todo","completed","inherits","createClass","key","value","_this$props$todo","id","title","type","onChange","markComplete","bind","onClick","delTodo","btnStyle","Component","border","borderRadius","cursor","float","Todos","todos","map","components_TodoItem","AddTodo","state","e","setState","defineProperty","target","name","onSubmit","preventDefault","addTodo","display","flex","placeholder","className","About","Fragment","App","Axios","delete","then","res","toConsumableArray","filter","post","data","_this2","get","_this3","BrowserRouter","Route","path","render","components_AddTodo","components_Todos","component","Boolean","window","location","hostname","match","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.fc18f0c5.chunk.js","sourcesContent":["import React from 'react'\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default function Header() {\r\n    return (\r\n        <header style={headerStyle}>\r\n            <h1>TodoList</h1>\r\n            <Link style={linkStyle} to=\"/\">Home</Link> | <Link style={linkStyle} to=\"/about\">About</Link>\r\n        </header>\r\n    )\r\n}\r\n\r\nconst headerStyle = {\r\n    background: '#333',\r\n    color: '#fff',\r\n    textAlign: 'center',\r\n    padding: '10px'\r\n}\r\n\r\nconst linkStyle = {\r\n    color: '#fff',\r\n    textDecoration: 'none'\r\n}\r\n","import React, { Component } from 'react';\r\n\r\n\r\nexport class TodoItem extends Component {\r\n\r\n    getStyle = () => {\r\n        return {\r\n            background: '#f4f4f4',\r\n            padding: '10px',\r\n            borderBottom: '1px #ccc dotted',\r\n            textDecoration: this.props.todo.completed ? 'line-through' : 'none'\r\n        }\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        const { id, title } = this.props.todo;\r\n        return (\r\n            <div style={this.getStyle()}>\r\n                <p>\r\n                    <input type=\"checkbox\" onChange={this.props.markComplete.bind(this, id)} />{' '}\r\n                    {title}\r\n                    <button onClick={this.props.delTodo.bind(this, id)} style={btnStyle}>x</button>\r\n                </p>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n// TodoItem.prototype = {\r\n//     todo: PropTypes.object.isRequired\r\n// }\r\n\r\n\r\n\r\nconst btnStyle = {\r\n    background: '#ff0000',\r\n    color: '#fff',\r\n    border: 'none',\r\n    padding: '5px 10px',\r\n    borderRadius: '50%',\r\n    cursor: 'pointer',\r\n    float: 'right'\r\n}\r\n\r\n\r\nexport default TodoItem\r\n","import React, { Component } from 'react';\r\nimport TodoItem from './TodoItem';\r\n\r\nimport '../App.css';\r\n\r\nclass Todos extends Component {\r\n\r\n\r\n\r\n    render() {\r\n        return this.props.todos.map((todo) => (\r\n            <TodoItem key={todo.id} todo={todo} markComplete={this.props.markComplete} delTodo={this.props.delTodo} />\r\n        ));\r\n    }\r\n}\r\n\r\n// Todos.prototype = {\r\n//     todos: PropTypes.array.isRequired\r\n// }\r\n\r\n\r\nexport default Todos;\r\n","import React, { Component } from 'react'\r\n\r\nexport class AddTodo extends Component {\r\n\r\n    state = {\r\n        title: ''\r\n    }\r\n\r\n    onChange = (e) => this.setState({ [e.target.name]: e.target.value });\r\n\r\n    onSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.props.addTodo(this.state.title);\r\n        this.setState({ title: '' });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <form onSubmit={this.onSubmit} style={{ display: 'flex' }}>\r\n                <input type=\"text\" name=\"title\"\r\n                    style={{ flex: '10', padding: '5px' }} placeholder=\"Add Todo ...\" value={this.state.title} onChange={this.onChange} />\r\n                <input type=\"submit\" value=\"Submit\"\r\n                    className=\"btn\" style={{ flex: '1' }} />\r\n            </form>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AddTodo\r\n","import React, { Component } from 'react'\r\n\r\nexport class About extends Component {\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <h1>About</h1>\r\n                <p>This is a Todo app  v1.0.0. It is a part of react crash course . :) </p>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default About\r\n","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\nimport Header from './components/layout/Header';\nimport Todos from './components/Todos';\nimport AddTodo from './components/AddTodo';\nimport About from './components/pages/About';\n// import uuid from 'uuid';\n\nimport './App.css';\nimport Axios from 'axios';\n\nclass App extends Component {\n\n  state = {\n    todos: []\n  }\n\n  componentDidMount() {\n    Axios.get('https://jsonplaceholder.typicode.com/todos?_limit=10').then(res => this.setState({ todos: res.data })\n    );\n  }\n\n\n  // Toggle Complete\n  markComplete = (id) => {\n    this.setState({\n      todos: this.state.todos.map(todo => {\n        if (todo.id === id) {\n          todo.completed = !todo.completed\n        }\n        return todo;\n      })\n    });\n\n  }\n\n  // Delete Todo\n  delTodo = (id) => {\n    Axios.delete(`https://jsonplaceholder.typicode.com/todos/${id}`).then(res =>\n      this.setState({ todos: [...this.state.todos.filter(todo => todo.id !== id)] })\n    );\n  }\n\n  // Add Todo\n  addTodo = (title) => {\n    Axios.post('https://jsonplaceholder.typicode.com/todos', {\n      title,\n      completed: false\n    }).then(res =>\n      this.setState({ todos: [...this.state.todos, res.data] })\n    );\n\n  }\n\n  render() {\n\n    return (\n      <Router>\n        <div className=\"App\">\n          <div className=\"container\">\n            <Header />\n            <Route path=\"/\" render={props => (\n              <React.Fragment>\n                <AddTodo addTodo={this.addTodo} />\n                <Todos todos={this.state.todos} markComplete={this.markComplete}\n                  delTodo={this.delTodo} />\n              </React.Fragment>\n            )} />\n            <Route path=\"/about\" component={About} />\n          </div>\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}